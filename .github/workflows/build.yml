#
# .github/workflows/codeql-analysis.yml
#
# Copyright 2021 Jens A. Koch.
# SPDX-License-Identifier: MIT
# This file is part of jakoch/wikifolio_universe_converter.
#

name: Build

on: [push]

jobs:

# ---------------------------------------------------------------------------------------

  build-on-windows-2019:

# ---------------------------------------------------------------------------------------

    name: "Windows VC16"
    runs-on: windows-latest

    env:
      COMPILER: "VC16"
      BUILD_TYPE: Release
      VCPKG_ROOT: C:\vcpkg
      VCPKG_TARGET_TRIPLET: x64-windows-static
      BUILD_SHARED_LIBS: OFF

    defaults:
      run:
        shell: cmd

    steps:
      - name: ü§ò Checkout Code
        uses: actions/checkout@v2 # https://github.com/actions/checkout

      - name: ‚Ñπ Show Tool Versions
        run: |
          date /T
          time /T
          curl -V
          cmake --version
          msbuild /version
          vcpkg version
          echo NUMBER_OF_PROCESSORS=%NUMBER_OF_PROCESSORS%

      - name: üì• Setup VC Environment (‚Üí vcvarsall)
        run: call "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"

      - name: üîΩ Update VCPKG
        run: |
          cd ${{ env.VCPKG_ROOT }}
          git reset --hard
          git pull --quiet
          bootstrap-vcpkg.bat -disableMetrics
          vcpkg integrate install --triplet=${{ env.VCPKG_TARGET_TRIPLET }} --feature-flags=manifests
          vcpkg version

      - name: üéØ Cache VCPKG
        id: cache-vcpkg
        uses: actions/cache@v1 # https://github.com/actions/cache
        with:
          path: ~\AppData\Local\vcpkg
          key: cache-windows-vcpkg-${{ env.VCPKG_TARGET_TRIPLET }}-${{ github.ref }}-${{ github.run_number }}
          restore-keys: |
            cache-windows-vcpkg-${{ env.VCPKG_TARGET_TRIPLET }}-${{ github.ref }}
            cache-windows-vcpkg-${{ env.VCPKG_TARGET_TRIPLET }}

      - name: ‚úè CMake ‚ûî Configure (including VCPKG ‚Üí Install Dependencies)
        run: |
          cmake -G "Visual Studio 16 2019" -A x64                                              ^
                -S ${{ github.workspace }} -B ../build                                         ^
                -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}                                       ^
                -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake  ^
                -DVCPKG_TARGET_TRIPLET=${{ env.VCPKG_TARGET_TRIPLET }}                         ^
                -DBUILD_SHARED_LIBS=${{ env.BUILD_SHARED_LIBS }}                               ^
                -DCMAKE_VERBOSE_MAKEFILE=ON

      - name: ‚ùî CHECK important folders, to see if everything is present (after building)
        run: |
          dir ..\build
          dir /S /B ..\build\vcpkg_installed\${{ env.VCPKG_TARGET_TRIPLET }}
          dir /S /B ..\build

      - name: üôè CMake ‚Üí Build
        run: |
          cd ..\build
          cmake --build . --config %BUILD_TYPE% -j %NUMBER_OF_PROCESSORS%

      #- name: üì¶ CMake ‚ûî Install
      #  run: |
      #    cd ..\build
      #    cmake --install . --config %BUILD_TYPE% --prefix build/wiuc --verbose

      - name: Copy build artifact to packaging folder
        run: |
          mkdir artifact
          copy ..\build\${{ env.BUILD_TYPE }}\wiuc.exe artifact\

      - name: üîº Upload Build Artifact
        uses: actions/upload-artifact@v2 # https://github.com/actions/upload-artifact
        if: always()
        with:
          name: Wikifolio_Investment_Universe_Converter-${{ env.VCPKG_TARGET_TRIPLET }}-${{ env.COMPILER }}
          path: artifact\wiuc.exe

# ---------------------------------------------------------------------------------------

  build-on-windows-2022:

# ---------------------------------------------------------------------------------------

    name: "Windows VC17"
    runs-on: windows-2022

    env:
      COMPILER: "VC17"
      BUILD_TYPE: Release
      VCPKG_ROOT: C:\vcpkg
      VCPKG_TARGET_TRIPLET: x64-windows-static
      BUILD_SHARED_LIBS: OFF

    defaults:
      run:
        shell: cmd

    steps:
      - name: ü§ò Checkout Code
        uses: actions/checkout@v2 # https://github.com/actions/checkout

      - name: ‚Ñπ Show Tool Versions
        run: |
          date /T
          time /T
          curl -V
          cmake --version
          msbuild /version
          vcpkg version
          echo NUMBER_OF_PROCESSORS=%NUMBER_OF_PROCESSORS%

      # https://github.com/actions/virtual-environments/blob/main/images/win/Windows2022-Readme.md#visual-studio-enterprise-2022
      - name: üì• Setup VC Environment (‚Üí vcvarsall)
        run: call "C:/Program Files/Microsoft Visual Studio/2022/Preview/VC/Auxiliary/Build/vcvars64.bat"

      - name: üîΩ Update VCPKG
        run: |
          cd ${{ env.VCPKG_ROOT }}
          git reset --hard
          git pull --quiet
          bootstrap-vcpkg.bat -disableMetrics
          vcpkg integrate install --triplet=${{ env.VCPKG_TARGET_TRIPLET }} --feature-flags=manifests
          vcpkg version

      - name: üéØ Cache VCPKG
        id: cache-vcpkg
        uses: actions/cache@v1 # https://github.com/actions/cache
        with:
          path: ~\AppData\Local\vcpkg
          key: cache-windows-vcpkg-${{ env.VCPKG_TARGET_TRIPLET }}-${{ github.ref }}-${{ github.run_number }}
          restore-keys: |
            cache-windows-vcpkg-${{ env.VCPKG_TARGET_TRIPLET }}-${{ github.ref }}
            cache-windows-vcpkg-${{ env.VCPKG_TARGET_TRIPLET }}

      - name: ‚úè CMake ‚ûî Configure (including VCPKG ‚Üí Install Dependencies)
        run: |
          cmake -G "Visual Studio 17 2022" -A x64                                              ^
                -S ${{ github.workspace }} -B ../build                                         ^
                -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}                                       ^
                -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake  ^
                -DVCPKG_TARGET_TRIPLET=${{ env.VCPKG_TARGET_TRIPLET }}                         ^
                -DBUILD_SHARED_LIBS=${{ env.BUILD_SHARED_LIBS }}                               ^
                -DCMAKE_VERBOSE_MAKEFILE=ON

      - name: ‚ùî CHECK important folders, to see if everything is present (after building)
        run: |
          dir ..\build
          dir /S /B ..\build\vcpkg_installed\${{ env.VCPKG_TARGET_TRIPLET }}
          dir /S /B ..\build

      - name: üôè CMake ‚Üí Build
        run: |
          cd ..\build
          cmake --build . --config %BUILD_TYPE% -j %NUMBER_OF_PROCESSORS%

      #- name: üì¶ CMake ‚ûî Install
      #  run: |
      #    cd ..\build
      #    cmake --install . --config %BUILD_TYPE% --prefix build/wiuc --verbose

      - name: Copy build artifact to packaging folder
        run: |
          mkdir artifact
          copy ..\build\${{ env.BUILD_TYPE }}\wiuc.exe artifact\

      - name: üîº Upload Build Artifact
        uses: actions/upload-artifact@v2 # https://github.com/actions/upload-artifact
        if: always()
        with:
          name: Wikifolio_Investment_Universe_Converter-${{ env.VCPKG_TARGET_TRIPLET }}-${{ env.COMPILER }}
          path: artifact\wiuc.exe

# ---------------------------------------------------------------------------------------

  build-on-windows-2022-vcpkg-head:

# ---------------------------------------------------------------------------------------

    name: "Windows VC17 vcpkg head"
    runs-on: windows-2022

    env:
      COMPILER: "VC17"
      BUILD_TYPE: Release
      VCPKG_ROOT: C:\vcpkg
      VCPKG_TARGET_TRIPLET: x64-windows-static
      BUILD_SHARED_LIBS: OFF

    defaults:
      run:
        shell: cmd

    steps:
      - name: ü§ò Checkout Code
        uses: actions/checkout@v2 # https://github.com/actions/checkout

      - name: ‚Ñπ Show Tool Versions
        run: |
          date /T
          time /T
          curl -V
          cmake --version
          msbuild /version
          vcpkg version
          echo NUMBER_OF_PROCESSORS=%NUMBER_OF_PROCESSORS%

      # https://github.com/actions/virtual-environments/blob/main/images/win/Windows2022-Readme.md#visual-studio-enterprise-2022
      - name: üì• Setup VC Environment (‚Üí vcvarsall)
        run: call "C:/Program Files/Microsoft Visual Studio/2022/Preview/VC/Auxiliary/Build/vcvars64.bat"

      - name: üîΩ Update VCPKG
        run: |
          cd ${{ env.VCPKG_ROOT }}
          git reset --hard
          git pull --quiet
          bootstrap-vcpkg.bat -disableMetrics
          vcpkg integrate install --triplet=${{ env.VCPKG_TARGET_TRIPLET }} --feature-flags=manifests --head
          vcpkg version

      - name: üéØ Cache VCPKG
        id: cache-vcpkg
        uses: actions/cache@v1 # https://github.com/actions/cache
        with:
          path: ~\AppData\Local\vcpkg
          key: cache-windows-vcpkg-${{ env.VCPKG_TARGET_TRIPLET }}-${{ github.ref }}-${{ github.run_number }}
          restore-keys: |
            cache-windows-vcpkg-${{ env.VCPKG_TARGET_TRIPLET }}-${{ github.ref }}
            cache-windows-vcpkg-${{ env.VCPKG_TARGET_TRIPLET }}

      - name: ‚úè CMake ‚ûî Configure (including VCPKG ‚Üí Install Dependencies)
        run: |
          cmake -G "Visual Studio 17 2022" -A x64                                              ^
                -S ${{ github.workspace }} -B ../build                                         ^
                -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}                                       ^
                -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake  ^
                -DVCPKG_TARGET_TRIPLET=${{ env.VCPKG_TARGET_TRIPLET }}                         ^
                -DBUILD_SHARED_LIBS=${{ env.BUILD_SHARED_LIBS }}                               ^
                -DCMAKE_VERBOSE_MAKEFILE=ON

      - name: ‚ùî CHECK important folders, to see if everything is present (after building)
        run: |
          dir ..\build
          dir /S /B ..\build\vcpkg_installed\${{ env.VCPKG_TARGET_TRIPLET }}
          dir /S /B ..\build

      - name: üôè CMake ‚Üí Build
        run: |
          cd ..\build
          cmake --build . --config %BUILD_TYPE% -j %NUMBER_OF_PROCESSORS%

      #- name: üì¶ CMake ‚ûî Install
      #  run: |
      #    cd ..\build
      #    cmake --install . --config %BUILD_TYPE% --prefix build/wiuc --verbose

      - name: Copy build artifact to packaging folder
        run: |
          mkdir artifact
          copy ..\build\${{ env.BUILD_TYPE }}\wiuc.exe artifact\

      - name: üîº Upload Build Artifact
        uses: actions/upload-artifact@v2 # https://github.com/actions/upload-artifact
        if: always()
        with:
          name: Wikifolio_Investment_Universe_Converter-${{ env.VCPKG_TARGET_TRIPLET }}-head-${{ env.COMPILER }}
          path: artifact\wiuc.exe

# ---------------------------------------------------------------------------------------

  build-on-linux:

# ---------------------------------------------------------------------------------------

    name: "Linux ${{ matrix.COMPILER.name }}"
    runs-on: ${{ matrix.OS }}

    strategy:
      fail-fast: false
      matrix:
        OS: [ ubuntu-latest ]
        BUILD_TYPE: [ Release ]
        COMPILER:
        - {
            name: "GCC-9",
            cc: "gcc-9",
            cxx: "g++-9",
            apt_package: g++-9,
          }
        - {
            name: "GCC-10",
            cc: "gcc-10",
            cxx: "g++-10",
            apt_package: g++-10,
          }
        - {
            name: "Clang-12",
            cc: "clang-12",
            cxx: "clang++-12",
            apt_package: clang-12,
          }

    env:
      VCPKG_ROOT: /usr/local/share/vcpkg
      VCPKG_TARGET_TRIPLET: x64-linux
      BUILD_SHARED_LIBS: ON

    steps:
      - name: ü§ò Checkout Code
        uses: actions/checkout@v2 # https://github.com/actions/checkout

      - name: üîΩ Install Dependencies
        run: |
          sudo apt update
          sudo apt install ${{ matrix.COMPILER.package }} -y

      - name: üîΩ Update VCPKG
        run: |
          cd ${{ env.VCPKG_ROOT }}
          git reset --hard
          git pull --quiet
          ./bootstrap-vcpkg.sh -disableMetrics
          vcpkg integrate install --triplet=${{ env.VCPKG_TARGET_TRIPLET }} --feature-flags=manifests
          vcpkg version

      - name: ‚úè CMake ‚ûî Configure (including VCPKG ‚Üí Install Dependencies)
        run: |
          cmake -S ${{ github.workspace }} -B ../build                                         \
                -DCMAKE_BUILD_TYPE=${{ matrix.BUILD_TYPE }}                                       \
                -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake  \
                -DVCPKG_TARGET_TRIPLET=${{ env.VCPKG_TARGET_TRIPLET }}                         \
                -DBUILD_SHARED_LIBS=${{ env.BUILD_SHARED_LIBS }}                               \
                -DCMAKE_VERBOSE_MAKEFILE=ON
        env:
          CC: ${{matrix.COMPILER.cc}}
          CXX: ${{matrix.COMPILER.cxx}}

      - name: üôè CMake ‚Üí Build
        run: |
          cd ../build
          cmake --build . --config ${{ matrix.BUILD_TYPE }}

      - name: Copy build artifact to packaging folder
        run: |
          mkdir artifact
          cp ../build/wiuc artifact/

      - name: üîº Upload Build Artifact
        uses: actions/upload-artifact@v2 # https://github.com/actions/upload-artifact
        if: always()
        with:
          name: Wikifolio_Investment_Universe_Converter-${{ env.VCPKG_TARGET_TRIPLET }}-${{ matrix.COMPILER.name }}
          path: artifact/wiuc
